<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ROS tools in Linux by command line</title>
      <link href="/liangjunyi.github.io/2022/05/29/the-usage-of-ros-tools/"/>
      <url>/liangjunyi.github.io/2022/05/29/the-usage-of-ros-tools/</url>
      
        <content type="html"><![CDATA[<h1 id="ROS-tools-in-Linux"><a href="#ROS-tools-in-Linux" class="headerlink" title="ROS tools in Linux"></a>ROS tools in Linux</h1><h2 id="1-open-Turtlesim"><a href="#1-open-Turtlesim" class="headerlink" title="1. open Turtlesim"></a>1. open Turtlesim</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">roscore <span class="token comment"># start the ROS Master</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosrun turtlesim turtlesim_node <span class="token comment"># start the turtlesim</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosrun turtlesim turtle_teleop_key <span class="token comment"># start turtle control node</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/29/gokcpLmyPZBVDqR.png" alt="image-20220529151250691"></p><h2 id="2-rqt-graph"><a href="#2-rqt-graph" class="headerlink" title="2. rqt_graph"></a>2. rqt_graph</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rqt_graph<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/29/wrOlhL1vedbkBGs.png" alt="image-20220529151602659"></p><ul><li><code>/turtlesim</code> node is  a simple simulator for teaching ROS concepts.</li><li><code>teleop_turtle</code> node </li><li><code>/turtle1/cmd_vel</code> topic</li></ul><h2 id="3-rosnode-list"><a href="#3-rosnode-list" class="headerlink" title="3. rosnode list"></a>3. rosnode list</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosnode list <span class="token comment"># show the current nodes</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/29/FphekDm5ydRcTz3.png" alt="image-20220529173940604"></p><h2 id="3-rosnode-info"><a href="#3-rosnode-info" class="headerlink" title="3. rosnode info"></a>3. rosnode info</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosnode info somenode <span class="token comment"># check somenode's information</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/29/IB8NcqrQJwsAl3i.png" alt="image-20220529181619612"></p><h2 id="4-rostopic-list"><a href="#4-rostopic-list" class="headerlink" title="4. rostopic list"></a>4. rostopic list</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rostopic list <span class="token comment"># show the current topic</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/29/5jNCniHyRQD2mwM.png" alt="image-20220529182106662"></p><h2 id="5-rostopic-pub"><a href="#5-rostopic-pub" class="headerlink" title="5. rostopic pub"></a>5. rostopic pub</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rostopic pub /turtle1/cmd_vel <span class="token comment"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>click <code>tab</code> button twice </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rostopic pub /turtle1/cmd_vel geometry_msgs/Twist <span class="token string">"linear:   x: 0.0  y: 0.0  z: 0.0angular:  x: 0.0  y: 0.0  z: 0.0"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/29/8xYF34qBuzleHOP.png" alt="image-20220529182504985"></p><ul><li>we can find turtle move</li><li>but only move once</li><li>it is because pub instruction only publish one time</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rostopic pub -r <span class="token number">10</span> /turtle1/cmd_vel geometry_msgs/Twist <span class="token string">"linear:  x: 1.0  y: 0.0  z: 0.0angular:  x: 0.0  y: 0.0  z: 0.0"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>add <code>-r 10</code> after pub, </p><ul><li><code>-r</code> means rate,</li><li><code>10</code> means 10 times per second</li></ul><p><img src="https://s2.loli.net/2022/05/29/9qzsmeJSZ1G2Y3R.png" alt="image-20220529182826228"></p><h2 id="6-rosmsg-show"><a href="#6-rosmsg-show" class="headerlink" title="6. rosmsg show"></a>6. rosmsg show</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosmsg show geometry_msgs/Twist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/29/Qhyv4ZiUC1jN7lE.png" alt="image-20220529184730763"></p><h2 id="7-rosservice-list"><a href="#7-rosservice-list" class="headerlink" title="7. rosservice list"></a>7. rosservice list</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosservice list <span class="token comment"># show all service</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/29/CPW5BKr3aOGspST.png" alt="image-20220529185604586"></p><h2 id="8-rosservice-call"><a href="#8-rosservice-call" class="headerlink" title="8. rosservice call"></a>8. rosservice call</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosservice call /spawn <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>click tab for 2 times</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosservice call /spawn <span class="token string">"x: 2.0y: 2.0theta: 0.0name: 'turtle2'"</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/29/EG48CFokNjaAKTc.png" alt="image-20220529190116119"></p><p>we create another turtle</p><p>now we call <code>rostopic list</code> again, we can find we have turtle2 here</p><p><img src="https://s2.loli.net/2022/05/29/yrf4zPleNpY5Sxj.png" alt="image-20220529190225390"></p><h2 id="9-rosbag-record"><a href="#9-rosbag-record" class="headerlink" title="9. rosbag record"></a>9. rosbag record</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosbag record -a -O cmd_record <span class="token comment"># record the data into cmd_record file</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>we can find a new file under current folder has been created</li><li>named cmd_record.bag</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosbag play cmd_record.bag <span class="token comment"># play the data(the cmd_record file)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS download</title>
      <link href="/liangjunyi.github.io/2022/05/29/ros-download/"/>
      <url>/liangjunyi.github.io/2022/05/29/ros-download/</url>
      
        <content type="html"><![CDATA[<h3 id="1、添加ROS软件源"><a href="#1、添加ROS软件源" class="headerlink" title="1、添加ROS软件源"></a>1、添加ROS软件源</h3><p><strong>将以下命令复制到ubuntu的终端执行</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">sh</span> -c <span class="token string">'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>或者用下面这条命令（据说这条命令可以提高下载速度）</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">sh</span> -c <span class="token string">'. /etc/lsb-release &amp;&amp; echo "deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main" > /etc/apt/sources.list.d/ros-latest.list'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2、添加密钥"><a href="#2、添加密钥" class="headerlink" title="2、添加密钥"></a>2、添加密钥</h3><p><strong>将以下命令复制到ubuntu的终端执行</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> apt-key adv --keyserver <span class="token string">'hkp://keyserver.ubuntu.com:80'</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>成功后会显示如下界面：</strong></p><p><strong><a href="https://img-blog.csdnimg.cn/20201004161015910.png#pic_center"><img src="https://img-blog.csdnimg.cn/20201004161015910.png#pic_center" alt="img"></a></strong></p><h3 id="3、更新软件源"><a href="#3、更新软件源" class="headerlink" title="3、更新软件源"></a>3、更新软件源</h3><p><strong>将以下命令复制到ubuntu的终端执行（在这里顺便说一下，如果用wifi更新慢或者失败的话，切换至手机热点，再执行下面的命令试一下）</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>成功后会显示如下界面：</strong></p><p><a href="https://img-blog.csdnimg.cn/20201004161503897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/20201004161503897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a></p><h3 id="4、做完上面的三步就可以开始安装ROS了"><a href="#4、做完上面的三步就可以开始安装ROS了" class="headerlink" title="4、做完上面的三步就可以开始安装ROS了"></a>4、做完上面的三步就可以开始安装ROS了</h3><p><strong>将以下命令复制到ubuntu的终端执行（安装ROS的指令）</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> ros-melodic-desktop-full<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>因ubuntu版本的不同其安装指令也有可能不同，我的是ubuntu20.04 执行上面的代码时显示：无法定位软件包 ros-melodic-desktop-full ，然后改为执行下面的命令来安装：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> ros-noetic-desktop-full<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>会显示如下界面：</strong><br><a href="https://img-blog.csdnimg.cn/20201004162836852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/20201004162836852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a></p><p><strong>输入Y继续（保证有网络），就这568MB我下了整整一天。。。。。前80%挺快的用了1分钟左右吧，从81%到100%那速度是真慢啊，当然你可以尝试换一下软件源试一试，换源方法见文章<a href="https://blog.csdn.net/qq_44339029/article/details/108916820">Ubuntu如何通过简单的几步操作来配置系统的软件源、找不到软件和更新怎么办？（带动态图文介绍）</a></strong></p><p><strong>如果在安装过程中你有事需要关闭电脑，可以输入ctrl+c暂停安装，然后正常关闭就可以了，下一次有时间继续安装的时候，按ctrl+alt+t打开终端后，按↑就可以调出之前输入过的安装命令sudo apt install ros-noetic-desktop-full，然后回车输入密码后，就可以继续安装了，我就是分3次下完的。。。</strong><br><strong>安装完后的界面如下（我又重新输入了一遍安装命令，确认已经是最新版了）：</strong></p><p><strong><a href="https://img-blog.csdnimg.cn/20201006191050146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/20201006191050146.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a></strong></p><h3 id="5、初始化rosdep"><a href="#5、初始化rosdep" class="headerlink" title="5、初始化rosdep"></a>5、初始化rosdep</h3><p><strong>输入以下的命令，先对其初始化一下</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> rosdep init <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>如果出现以下界面，那么恭喜你，你可以省下一些麻烦了，直接跳到第6步就行了：</strong></p><p><a href="https://img-blog.csdnimg.cn/20201006200812951.png#pic_center"><img src="https://img-blog.csdnimg.cn/20201006200812951.png#pic_center" alt="img"></a></p><p><strong>如果出现了以下几种错误，也不要担心，下面几种错误我都经历过 ，当然也就为大家整理好了解决方法</strong><br><strong>（1）错误1：找不到命令</strong><br> <strong>尝试着输入以下命令</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python-rosdep2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>或者：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python3-rosdep2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>这时候它会出现以下的界面，输入Y继续</strong></p><p><strong><a href="https://img-blog.csdnimg.cn/20201006201904124.png#pic_center"><img src="https://img-blog.csdnimg.cn/20201006201904124.png#pic_center" alt="img"></a></strong></p><p><strong><a href="https://img-blog.csdnimg.cn/20201006202015671.png#pic_center"><img src="https://img-blog.csdnimg.cn/20201006202015671.png#pic_center" alt="img"></a></strong></p><p><strong>到这里如果再输入sudo rosdep init命令试试，如果出现了之前介绍的，我们想要的界面，请跳到第6步，若出现了新的错误，请继续看本步（第5步）的内容</strong></p><p><strong>（2）错误2：ERROR: cannot download default sources list from:https : &#x2F;&#x2F;raw.githubusercontent.com&#x2F;ros&#x2F;rosdistro&#x2F;master&#x2F;rosdep&#x2F;sources.list.d&#x2F;20-default.listWebsite may be down.<br>输入以下命令：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> gedit /etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>然后在打开的hosts文件中添加如下的内容，然后保存退出</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">199.232</span>.28.133 raw.githubusercontent.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>到这里如果再输入sudo rosdep init命令试试，如果出现了之前介绍的，我们想要的界面，请跳到第6步，若出现了新的错误，请继续看本步（第5步）的内容</strong></p><p><strong>（3）错误3：ERROR: default sources list file already exists: &#x2F;etc&#x2F;ros &#x2F;rosdep&#x2F;sources.list.d&#x2F;20-default.listPlease delete if you wish to re-initialize</strong><br><strong>输入以下命令：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">rm</span> /etc/ros/rosdep/sources.list.d/20-default.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>到这里如果再输入sudo rosdep init命令试试，应该就会出现了之前介绍的我们想要的界面了</strong></p><h3 id="6、更新rosdep"><a href="#6、更新rosdep" class="headerlink" title="6、更新rosdep"></a>6、更新rosdep</h3><p><strong>输入以下命令：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosdep update <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>怎么说呢，这一步真的很令人难受，很容易出现没有找到资源或者链接超时之类的错误，比如：unable to process source或error loading sources list: The read operation timed out</strong><br><strong>我在网上查阅了很多的资料，但是针对每个人的网络不同这些效果也不同，以上的错误多半是网络原因导致的，可以切换成手机热点试一下，每个人的状况可能不太一样，反正我试了一下毫无作用，然后当天试了20遍左右（也就是只要出错了，就再输入rosdep update重新试一下），一直出错，然后我有点事就出去了，等到第二天下午再试的时候一遍就成功了（所以说，不急着用的同学，在试了几遍后如果一直错误，可以换不同的时间段再试（说白了，这个跟你的网络波动有关，玄学。。。）），成功后的界面如下所示：</strong><br><a href="https://img-blog.csdnimg.cn/20201007163757827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/20201007163757827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a></p><p><strong>急着用的小伙伴只能不断的重复试了，下面介绍一种我在网上查到的一种用vim提高成功几率的方法（我没试过哈）</strong><br><strong>（1）需要先安装vim</strong><br><strong>输入以下指令，首先切换到root用户</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>输入以下指令，下载安装vim，然后输入y，确定下载安装</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">vim</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>最后输入vim，确认一下有没有安装成功</strong><br><strong>（2）利用vim调大DOWNLOAD_TIMEOUT的值</strong><br><strong>更改 &#x2F;usr&#x2F;lib&#x2F;python2.7&#x2F;dist-packages&#x2F;rosdep2&#x2F;下的三个文件sources_ list.py、gbpdistro_support.py、rep3.py中的DOWNLOAD_TIMEOUT &#x3D; 15.0值，改大一点，可以改成60试一下</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py<span class="token function">sudo</span> <span class="token function">vim</span> /usr/lib/python2.7/dist-packages/rosdep2/sources_list.py<span class="token function">sudo</span> <span class="token function">vim</span> /usr/lib/python2.7/dist-packages/rosdep2/rep3.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>打开文件，在命令行模式输入“:&#x2F;DOWNLOAD_TIMEOUT”搜索到参数设置的地方，修改过后输入:wq保存退出就行了。这个修改过后只是成功的几率会高很多，后面执行命令的时候发现卡住了就Ctrl + C重来多执行几次试一下</strong></p><h3 id="7、设置环境变量"><a href="#7、设置环境变量" class="headerlink" title="7、设置环境变量"></a>7、设置环境变量</h3><p><strong>输入以下命令：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"source /opt/ros/melodic/setup.bash"</span> <span class="token operator">>></span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>或者下面的这行代码，注意到底是melodic还是noetic或者是kinetic是由你的ubuntu的版本决定的，比如我的ubuntu是20.04版本的，对应的是noetic，也就是应该下面的这行代码，而不是上面那行</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"source /opt/ros/noetic/setup.bash"</span> <span class="token operator">>></span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>输入以下命令，运行该脚本让环境变量生效</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="8、-安装rosinstall"><a href="#8、-安装rosinstall" class="headerlink" title="8、 安装rosinstall"></a>8、 安装rosinstall</h3><p><strong>输入以下命令：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python-rosinstall python-rosinstall-generator python-wstool build-essential<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>如果提示没有可安装候选，如下所示：</strong></p><p><a href="https://img-blog.csdnimg.cn/20201007185653900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/20201007185653900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a></p><p><strong>按照提示更换软件包就行了，按照提示更改为以下命令：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> python3-rosinstall python3-rosinstall-generator python3-wstool<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="9、-验证ROS是否安装成功"><a href="#9、-验证ROS是否安装成功" class="headerlink" title="9、 验证ROS是否安装成功"></a>9、 验证ROS是否安装成功</h3><p><strong>按正常来说ROS到这里就安装完成了，现在我们来验证一下，输入以下命令：</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">roscore<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>如果出现了以下的问题说明，之前的安装没有安装全</strong></p><p><a href="https://img-blog.csdnimg.cn/20201007193119544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/20201007193119544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a></p><p><strong>输入以下命令，把没安装的安装一下就好了（如果显示有几个安装包无法下载，是因为网络的原因重新输入以下命令就行了）</strong></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">sudo apt install ros-noetic-desktop-full<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>到这里再输入roscore看一下，若安装成功会显示如下界面：</strong></p><p><a href="https://img-blog.csdnimg.cn/20201007193747683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/20201007193747683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a></p><p><strong>然后我们启动一下小海龟的仿真器试一试，按ctrl+alt+t打开一个新的终端，输入以下命令</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosrun turtlesim turtlesim_node<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>按ctrl+alt+t再打开一个新的终端，输入以下命令</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">rosrun turtlesim turtle_teleop_key<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>这时候你按键盘上的↑↓←→键就可以控制小海龟移动了！！！</strong><br><strong>那么恭喜你的ROS已经成功安装完了！！！</strong></p><p><a href="https://img-blog.csdnimg.cn/20201007194425419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center"><img src="https://img-blog.csdnimg.cn/20201007194425419.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0MzM5MDI5,size_16,color_FFFFFF,t_70#pic_center" alt="img"></a></p>]]></content>
      
      
      <categories>
          
          <category> ROS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File/Directory instruction</title>
      <link href="/liangjunyi.github.io/2022/05/26/file-directory-instruction/"/>
      <url>/liangjunyi.github.io/2022/05/26/file-directory-instruction/</url>
      
        <content type="html"><![CDATA[<h1 id="File-x2F-Directory-instruction"><a href="#File-x2F-Directory-instruction" class="headerlink" title="File&#x2F;Directory instruction"></a>File&#x2F;Directory instruction</h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">pwd</span> <span class="token comment"># 展示当前路径</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token comment"># 显示当前文件夹下的东西</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>-a 显示当前目录所有的文件和目录，包括隐藏的</li><li>-l 以列表的方式显示信息</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> <span class="token comment"># 切换目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>cd ~  回到自己的家目录</li><li>cd .. 回到当前目录的上一级目录</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">makdir <span class="token comment"># 创建目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>-p :创建多级目录</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rmdir</span> <span class="token comment"># 删除空目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> -rf <span class="token comment"># 删除非空目录</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Find root Password</title>
      <link href="/liangjunyi.github.io/2022/05/26/find-root-password/"/>
      <url>/liangjunyi.github.io/2022/05/26/find-root-password/</url>
      
        <content type="html"><![CDATA[<h1 id="Find-root-Password"><a href="#Find-root-Password" class="headerlink" title="Find root Password"></a>Find root Password</h1><ol><li><p>重启系统，并按住 <code>Shift</code> 键，直到出现如下界面</p><p><img src="https://s2.loli.net/2022/05/26/2Ta93kg1c76mCLz.png" alt="image-20220526110604328"></p><p>选择 <code>Advanced options for Ubuntu</code></p></li><li><p>进入下图界面后，选择 <code>recovery mode</code>，并根据下面提示在键盘上键入 <code>e</code> 进入编辑模式</p><p><img src="https://s2.loli.net/2022/05/26/KuYDG3LsNMyOpJq.png" alt="image-20220526110620633"></p></li><li><p>在编辑模式中找到如下图所示位置</p><p><img src="https://s2.loli.net/2022/05/26/WjzVL1yAwRicFbU.png" alt="image-20220526110633506"></p><p><img src="https://s2.loli.net/2022/05/26/zPmBDdcOMi4NuQ6.png" alt="image-20220526110700757"></p><p>修改 <code>ro recovery nomodeset</code> 为 <code>quiet splash rw init=/bin/bash</code>，并通过 <code>Ctrl + x</code> 或 <code>F10</code> 启动</p></li><li><p>等到启动完成后，通过 <code>passwd</code> 命令修改密码即可。修改完成后重启服务器即可使用新密码登录</p><p><img src="https://s2.loli.net/2022/05/26/rj76sfgQpDAuN9F.png" alt="image-20220526110715860"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Run level</title>
      <link href="/liangjunyi.github.io/2022/05/24/run-level/"/>
      <url>/liangjunyi.github.io/2022/05/24/run-level/</url>
      
        <content type="html"><![CDATA[<h1 id="Run-level"><a href="#Run-level" class="headerlink" title="Run level"></a>Run level</h1><h2 id="Meaning-of-each-run-level"><a href="#Meaning-of-each-run-level" class="headerlink" title="Meaning of each run level"></a>Meaning of each run level</h2><p>0：关机</p><p>1：单用户【找回丢失密码】 </p><p>2： 多用户状态没有网络服务 （不常用）</p><p>3：多用户状态有网络服务 （常用）</p><p>4：系统未使用保留给用户</p><p>5：图形界面 （常用）</p><p>6：系统重启</p><h2 id="switch-run-level"><a href="#switch-run-level" class="headerlink" title="switch run level"></a>switch run level</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">init <span class="token punctuation">[</span>0123456<span class="token punctuation">]</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="set-default-run-level"><a href="#set-default-run-level" class="headerlink" title="set default run level"></a>set default run level</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl get-default <span class="token comment"># 查看当前默认runlevel</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">systemctl set-default Target.target # 设置默认runlevel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/24/xcbsGz2vnrJLECV.png" alt="image-20220524153902289"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The remote root login</title>
      <link href="/liangjunyi.github.io/2022/05/23/the-remote-root-login/"/>
      <url>/liangjunyi.github.io/2022/05/23/the-remote-root-login/</url>
      
        <content type="html"><![CDATA[<ol><li><p>install ssh service</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">ssh</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>edit config file</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>change PermitRootLogin ‘s value into yes</p><p><img src="https://s2.loli.net/2022/05/23/YunjedXmhZWDtgQ.png" alt="image-20220523200715794"></p></li><li><p>restart ssh service</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/init.d/ssh restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Set password for root</title>
      <link href="/liangjunyi.github.io/2022/05/22/set-password-for-root/"/>
      <url>/liangjunyi.github.io/2022/05/22/set-password-for-root/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-set-root-password"><a href="#Linux-set-root-password" class="headerlink" title="Linux set root password"></a>Linux set root password</h1><ol><li><p>command line </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>enter user’s password</p></li><li><p>enter the root password that you want set</p></li><li><p>reenter root password</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shutdown Restart and Logout</title>
      <link href="/liangjunyi.github.io/2022/05/22/shutdown-restart-and-logout/"/>
      <url>/liangjunyi.github.io/2022/05/22/shutdown-restart-and-logout/</url>
      
        <content type="html"><![CDATA[<h1 id="Shutdown-Restart-and-Logout"><a href="#Shutdown-Restart-and-Logout" class="headerlink" title="Shutdown Restart and Logout"></a>Shutdown Restart and Logout</h1><h2 id="Shutdown-amp-Restart"><a href="#Shutdown-amp-Restart" class="headerlink" title="Shutdown &amp; Restart"></a>Shutdown &amp; Restart</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">shutdown</span> -h now <span class="token comment"># 立即进行关机</span><span class="token function">shutdown</span> -h <span class="token number">1</span> <span class="token comment"># 1分钟后关机</span><span class="token function">shutdown</span> -r now <span class="token comment"># 立刻重启计算机</span><span class="token function">halt</span> <span class="token comment"># 关机，同上</span><span class="token function">reboot</span> <span class="token comment"># 重启，同上</span><span class="token function">sync</span> <span class="token comment"># 吧内存数据同步到磁盘</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>recommend type sync every time before shutdown</p><p>if it need permission, add sudo beforesu </p></blockquote><h2 id="Login-and-Logout"><a href="#Login-and-Logout" class="headerlink" title="Login and Logout"></a>Login and Logout</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> - root <span class="token comment"># 切换成管理员</span><span class="token function">su</span> - username <span class="token comment"># 切换用户</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">logout</span> <span class="token comment"># 注销用户</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="example"><a href="#example" class="headerlink" title="example"></a>example</h3><p>current user is Tom, go to root.</p><p>Then logout at root, it will go back to Tom.</p><p>Then logout again, it will shutdown.</p><h3 id="Notice"><a href="#Notice" class="headerlink" title="Notice"></a>Notice</h3><p>It will different when you operate this in Linux and in xshell.</p><p>In Linux, there is no logout for Tom.</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>User &amp; User Group management</title>
      <link href="/liangjunyi.github.io/2022/05/22/user-user-group-management/"/>
      <url>/liangjunyi.github.io/2022/05/22/user-user-group-management/</url>
      
        <content type="html"><![CDATA[<h1 id="User-management"><a href="#User-management" class="headerlink" title="User management"></a>User management</h1><h2 id="User-part"><a href="#User-part" class="headerlink" title="User part"></a>User part</h2><h3 id="Add-new-user"><a href="#Add-new-user" class="headerlink" title="Add new user"></a>Add new user</h3><ul><li><p>Basic command line</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><blockquote><p>此方法虽然添加了用户，但是有可能没有默认创建文件夹，如果没有创建</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -m username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以解决这个问题</p><p>注意如果刚刚执行完上面的语句，需要先删除刚刚的user才能再次创建他，没有办法有两个同名的user</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">adduser username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个也可以，创建完user后也会生成文件夹，更加推荐</p></blockquote><h4 id="example"><a href="#example" class="headerlink" title="example :"></a>example :</h4><p><img src="https://s2.loli.net/2022/05/22/oFr1ltYL2G8jvOe.png" alt="image-20220522213056132"></p><ul><li><p>Example</p><ul><li>add a user <code>milan</code>, default user directory is &#x2F;home&#x2F;milan</li></ul></li><li><p>detail</p><ul><li><p>when create user successful, auto create directory for user at same time</p></li><li><p>if we use </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -d The specified directory username <span class="token comment"># useradd -d 指定目录 新加用户名</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>also create a user but this user will use the specified directory instead of generating a new directory</p><blockquote><p>此方法同上</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -m -d The specified directory username<span class="token comment"># useradd -m -d 指定目录 新加用户名</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以解决这个问题</p></blockquote><p><img src="https://s2.loli.net/2022/05/22/18SibYR4H2WteVI.png" alt="image-20220522213953461"></p><blockquote><p>给创建的用户指定了家目录</p></blockquote></li></ul></li></ul><h3 id="Set-password-for-new-user"><a href="#Set-password-for-new-user" class="headerlink" title="Set password for new user"></a>Set password for new user</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">passwd</span> username <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>This operation also need under root </p></blockquote><h3 id="Delete-user"><a href="#Delete-user" class="headerlink" title="Delete user"></a>Delete user</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">userdel</span> username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>only delete this user</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">userdel</span> -r username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Not only delete the user, but also delete the directory</p><h3 id="Querying-User-Information"><a href="#Querying-User-Information" class="headerlink" title="Querying User Information"></a>Querying User Information</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">id</span> username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="examples"><a href="#examples" class="headerlink" title="examples :"></a>examples :</h4><p><img src="https://s2.loli.net/2022/05/23/8P9HBovYZbRr6es.png" alt="image-20220523174054780"></p><p><img src="https://s2.loli.net/2022/05/23/QPJmgTs2dlwRVaC.png" alt="image-20220523174403469"></p><h3 id="Switch-users"><a href="#Switch-users" class="headerlink" title="Switch users"></a>Switch users</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">su</span> - username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>In Linux, if the current user has insufficient rights, you can switch to a user with higher right</p></li><li><p>A password is not required to change from a high-privilege user to a low-privilege user</p></li><li><p>Otherwise you need a password</p></li><li><p>To return to the original user, use the exit&#x2F;logout command</p></li></ul><blockquote><p>在操作linux中，如果当前权限不够，可以切换至更高权限的用户</p><p>从高权限用户到低权限用户不需要密码</p><p>反之需要密码</p><p>如果想回到原来用户使用exit&#x2F;logout指令</p></blockquote><h4 id="examples-1"><a href="#examples-1" class="headerlink" title="examples :"></a>examples :</h4><p><img src="https://s2.loli.net/2022/05/23/6EjAWvnoJelfF9Z.png" alt="image-20220523175242905"></p><h3 id="Who-am-i"><a href="#Who-am-i" class="headerlink" title="Who am i"></a>Who am i</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">who</span> am i<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">whoami</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>it will show the initial login user’s information</p><h4 id="examples-2"><a href="#examples-2" class="headerlink" title="examples :"></a>examples :</h4><p>i am at root currently, but it will show the init login user – liangjunyi</p><p><img src="https://s2.loli.net/2022/05/23/uinKFQ4VG9EyYLS.png" alt="image-20220523180109271"></p><p><img src="https://s2.loli.net/2022/05/23/bIhWSCz5QD3FrqP.png" alt="image-20220523180147131"></p><h2 id="User-Group-part"><a href="#User-Group-part" class="headerlink" title="User Group part"></a>User Group part</h2><p>Unified management of users with common&#x2F;permission in the system</p><blockquote><p>系统对有 共性&#x2F;权限 的用户进行统一管理</p></blockquote><h3 id="Add-new-group"><a href="#Add-new-group" class="headerlink" title="Add new group"></a>Add new group</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupadd</span> groupname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Delete-a-group"><a href="#Delete-a-group" class="headerlink" title="Delete a group"></a>Delete a group</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">groupdel</span> groupname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Add-group-when-add-user"><a href="#Add-group-when-add-user" class="headerlink" title="Add group when add user"></a>Add group when add user</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">useradd</span> -g groupname username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Change-user’s-group"><a href="#Change-user’s-group" class="headerlink" title="Change user’s group"></a>Change user’s group</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">usermod</span> -g groupname username<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="File-for-user-and-group"><a href="#File-for-user-and-group" class="headerlink" title="File for user and group"></a>File for user and group</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/passwd 文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>user的配置文件，记录用户的各种信息</p><p>每行的含义：</p><ul><li>用户名：口令：用户标识号：组标识号：注释性描述：主目录：登陆shell</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/shadow 文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>口令的配置文件</p><p>每行的含义：</p><ul><li>登录名：加密口令：最后一次修改时间：最小时间间隔：最大时间间隔：警告时间：不活动时间：失效时间：标志<ul><li>加密口令：设置了密码的用户会有很长一段的密码，没设置的是叹号</li></ul></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/etc/group 文件<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>group的配置文件，记录linux包含组的信息</p><p>每行含义：</p><ul><li>组名：口令：组标识号：组内用户列表</li></ul><h2 id="Find-all-users-groups"><a href="#Find-all-users-groups" class="headerlink" title="Find all users, groups"></a>Find all users, groups</h2><h3 id="find-all-users"><a href="#find-all-users" class="headerlink" title="find all users"></a>find all users</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>or</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cut</span> -d <span class="token builtin class-name">:</span> -f <span class="token number">1</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>or</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/passwd <span class="token operator">|</span><span class="token function">awk</span> -F <span class="token punctuation">\</span>: <span class="token string">'&#123;print $1&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>or</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/passwd<span class="token operator">|</span><span class="token function">grep</span> -v nologin<span class="token operator">|</span><span class="token function">grep</span> -v <span class="token function">halt</span><span class="token operator">|</span><span class="token function">grep</span> -v <span class="token function">shutdown</span><span class="token operator">|</span><span class="token function">awk</span> -F<span class="token string">":"</span> <span class="token string">'&#123;print $1"|"$3"|"$4&#125;'</span><span class="token operator">|</span><span class="token function">more</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="find-all-groups"><a href="#find-all-groups" class="headerlink" title="find all groups"></a>find all groups</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> /etc/group<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>or</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">getent group<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vi &amp; Vim in Linux</title>
      <link href="/liangjunyi.github.io/2022/05/22/vi-vim-in-linux/"/>
      <url>/liangjunyi.github.io/2022/05/22/vi-vim-in-linux/</url>
      
        <content type="html"><![CDATA[<h1 id="Vi-amp-Vim-in-Linux"><a href="#Vi-amp-Vim-in-Linux" class="headerlink" title="Vi &amp; Vim in Linux"></a>Vi &amp; Vim in Linux</h1><h2 id="basic-description-about-vi-amp-vim"><a href="#basic-description-about-vi-amp-vim" class="headerlink" title="basic description about vi &amp; vim"></a>basic description about vi &amp; vim</h2><p>vi is Linux built in text editor</p><p>vim is the enhanced version to vi, can do program</p><h2 id="three-patterns-by-vi-amp-vim"><a href="#three-patterns-by-vi-amp-vim" class="headerlink" title="three patterns by vi &amp; vim"></a>three patterns by vi &amp; vim</h2><ul><li>normal pattern 正常模式<ul><li>can not edit in this pattern</li></ul></li><li>edit pattern 编辑模式</li><li>cmd line pattern 命令行模式</li></ul><h2 id="operating-process"><a href="#operating-process" class="headerlink" title="operating process"></a>operating process</h2><h4 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> Hello.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/22/OVQKMnNU3glEbr4.png" alt="image-20220522170231266"></p><p>by this command, we go to normal pattern, from our command line</p><p><img src="https://s2.loli.net/2022/05/22/uq4t2XNYa8Gw5Eg.png" alt="image-20220522170425702"></p><h4 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">type</span> i <span class="token comment"># 摁下i</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>now we are in edit pattern</p><p><img src="https://s2.loli.net/2022/05/22/mxjYWdJ3VzeSR5T.png" alt="image-20220522170558960"></p><p>we can write our file here</p><h4 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h4><p>After editing</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">we <span class="token builtin class-name">type</span> esc first  <span class="token comment"># 摁下esc</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>now we leave the edit pattern and go to normal pattern now</p><p><img src="https://s2.loli.net/2022/05/22/KIrTDZzySEfCpxU.png" alt="image-20220522171432159"></p><p>then type</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">:wq <span class="token comment"># write(save) and quit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/22/oNIKehzbUL4MClr.png" alt="image-20220522172138024"></p><p><img src="https://s2.loli.net/2022/05/22/Is7E4atN6PTzmR8.png" alt="image-20220522171815264"></p><h4 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h4><p>if you want edit this file again</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> Hello.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/22/JHtj6Lavx9fTqWB.png" alt="image-20220522172027683"></p><h2 id="how-to-change-vi-amp-vim"><a href="#how-to-change-vi-amp-vim" class="headerlink" title="how to change vi &amp; vim"></a>how to change vi &amp; vim</h2><p><img src="https://s2.loli.net/2022/05/22/5TQscPwDxLqnR3I.png" alt="image-20220522165131419"></p><h2 id="shortcut-key-words-快捷键"><a href="#shortcut-key-words-快捷键" class="headerlink" title="shortcut key words 快捷键"></a>shortcut key words 快捷键</h2><h4 id="under-normal-pattern-copy-and-paste"><a href="#under-normal-pattern-copy-and-paste" class="headerlink" title="under normal pattern : copy and paste"></a>under normal pattern : copy and paste</h4><ul><li>copy current line : yy</li><li>paste : p<ul><li>copy 5 line below current line : 5yy 包括复制当前行</li></ul></li><li>delete current line : dd<ul><li>delete 5 line below current line : 5dd 包括删除当前行</li></ul></li></ul><blockquote><p>these are under normal pattern, if you are in edit pattern, it will just type yy in the file</p></blockquote><h4 id="search-a-word-in-the-file"><a href="#search-a-word-in-the-file" class="headerlink" title="search a word in the file"></a>search a word in the file</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/hello<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">type</span> enter <span class="token comment"># 摁下回车开始查找</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">type</span> n <span class="token comment"># 下一个，查到最后一个单词则回到开头</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="set-number-for-line"><a href="#set-number-for-line" class="headerlink" title="set number for line"></a>set number for line</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">:</span> <span class="token builtin class-name">set</span> nu <span class="token comment"># 设置行号</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/05/22/bqmNxlnLCo5ZEhB.png" alt="image-20220522173207087"></p><p><img src="https://s2.loli.net/2022/05/22/9tnNXgimkxzyuTY.png" alt="image-20220522173412258"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">:</span> <span class="token builtin class-name">set</span> nonu <span class="token comment"># 取消行号</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="go-to-the-last-line-and-first-line"><a href="#go-to-the-last-line-and-first-line" class="headerlink" title="go to the last line and first line"></a>go to the last line and first line</h4><blockquote><p>under normal pattern</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">G <span class="token comment"># go to last line</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gg <span class="token comment"># go to first line</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="undo"><a href="#undo" class="headerlink" title="undo"></a>undo</h4><p>at the normal pattern </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">u <span class="token comment"># undo</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>if do some editions in edit pattern, can type esc go to normal pattern, then type u to undo all the editions you did just now</p></blockquote><h4 id="move-the-cursor"><a href="#move-the-cursor" class="headerlink" title="move the cursor"></a>move the cursor</h4><p>at the normal pattern</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">20</span> <span class="token builtin class-name">shift</span> g <span class="token comment"># move to the 20th line</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>有可能键盘因为摁完shift后变成中文输入法，可以采取的措施是打开大写输入</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Open an app in Linux</title>
      <link href="/liangjunyi.github.io/2022/05/19/open-an-app-in-linux/"/>
      <url>/liangjunyi.github.io/2022/05/19/open-an-app-in-linux/</url>
      
        <content type="html"><![CDATA[<h1 id="Open-an-app-in-Linux"><a href="#Open-an-app-in-Linux" class="headerlink" title="Open an app in Linux"></a>Open an app in Linux</h1><h2 id="Open-app"><a href="#Open-app" class="headerlink" title="Open app"></a>Open app</h2><p>For example open firefox, we can type in terminal </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">firefox $<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><ul><li>no need go to specific folder, can directly type this command in the terminal</li><li>The reason add <code>$</code> at end is aim to run firefox at backend, so that the terminal will not be occupied by Firefox</li><li>if you forget type <code>$</code>, you can type <code>Ctrl+Z</code> and then type <code>bg</code> and return.</li></ul></blockquote><h2 id="Close-app"><a href="#Close-app" class="headerlink" title="Close app"></a>Close app</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>show the currently running process</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> aux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>is to show all the currently running process and their state</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>it means search</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">grep</span> evince<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>search for evince process</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> evince     <span class="token comment">#查到evince的进程</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>|:管道符号,command1 |command2,将command1输出结果通过管道作为command2命令的输入参数.</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">kill</span> -s <span class="token number">9</span> pid   <span class="token comment">#杀死进程号为PID的进程，例如：kill -9 6705</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Some-commands"><a href="#Some-commands" class="headerlink" title="Some commands"></a>Some commands</h2><h3 id="ps命令-Process-Status"><a href="#ps命令-Process-Status" class="headerlink" title="ps命令 (Process Status)"></a>ps命令 (Process Status)</h3><p><code>ps aux</code>‘output format</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token environment constant">USER</span> PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>格式说明：</p><ul><li><p>USER: 行程拥有者</p></li><li><p>PID: pid 就是这个程序的 ID </p></li><li><p>%CPU: 占用的 CPU 使用率</p></li><li><p>%MEM: 占用的记忆体使用率</p></li><li><p>VSZ: 占用的虚拟记忆体大小</p></li><li><p>RSS: 占用的记忆体大小</p></li><li><p>TTY: 终端的次要装置号码 (minor device number of tty)</p></li><li><p>STAT: 该行程的状态，linux的进程有5种状态：</p><ul><li><p>D 不可中断 uninterruptible sleep (usually IO)  (收到信号不唤醒和不可运行, 进程必须等待直到有中断发生)</p></li><li><p>R 运行 runnable (on run queue)      (正在运行或在运行队列中等待)</p></li><li><p>S 中断 sleeping     (休眠中, 受阻, 在等待某个条件的形成或接受到信号)</p></li><li><p>T 停止 traced or stopped    (进程收到SIGSTOP, SIGSTP, SIGTIN, SIGTOU信号后停止运行运行)</p></li><li><p>Z 僵死 a defunct (”zombie”) process   (进程已终止, 但进程描述符存在, 直到父进程调用wait4()系统调用后释放)</p></li><li><p>注: 其它状态还包括W(无驻留页), &lt;(高优先级进程), N(低优先级进程), L(内存锁页).</p></li></ul></li><li><p>START: 进程开始时间</p></li><li><p>TIME: 执行的时间</p></li><li><p>COMMAND:所执行的指令</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FPGA Game Machine Project</title>
      <link href="/liangjunyi.github.io/2022/05/18/fpga-game-machine-project/"/>
      <url>/liangjunyi.github.io/2022/05/18/fpga-game-machine-project/</url>
      
        <content type="html"><![CDATA[<h1 id="Prezzer"><a href="#Prezzer" class="headerlink" title="Prezzer"></a>Prezzer</h1><h3 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement"></a>Acknowledgement</h3><ul><li>Tran Nguyen Bao Long</li><li>Kat Yong Jie</li><li>Liang Junyi</li><li>Wang Zhuoran</li><li>Lu Mingrui</li><li>Han Jin</li><li>Sun Zhengnan</li><li>Yang Haocheng</li></ul><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>For our 50.002 project, we have created a single-player game called Prezzer. The objective of the game is to score the highest amount of points possible before the 30 seconds count down and avoid pressing the wrong button.</p><p>This is a game whereby the player must observe a matrix of LED lights, this LED matrix consists of three columns and four rows and there are 3 different coloured lights: red, green and blue player need to press different times to clear different color LED: red 3 times, green 2 times and red 1 times, and each row only lights one LED, Player need to press the right buttons based on the LED light at the lowest level with the corresponding colors and position.</p><p>The coloured LED will move down after we press the button correctly from the top to the bottom. If the player presses the wrong button. The game ends if the player presses the wrong button or runs out of time, and the final score will be displayed on the 7 seg on the top left of the game and time left will be displayed on the 7 seg on the top right of the game.</p><h3 id="How-to-play"><a href="#How-to-play" class="headerlink" title="How to play"></a>How to play</h3><ol><li>Press RESET button to start</li><li>Colored tiles will be randomly generated on the three columns</li><li>Press button below corresponding column</li><li>Clear as many tiles as you can within 30 seconds and get the max score</li><li>Pressing a button for the wrong column will mean game over.</li></ol><h3 id="Tiles-scores"><a href="#Tiles-scores" class="headerlink" title="Tiles scores"></a>Tiles scores</h3><ul><li>Red: 3 presses &#x3D; 3 points</li><li>Green: 2 presses &#x3D; 2 points</li><li>Blue: 1 press &#x3D; 1 point</li></ul><p>Red turns to Green turns to Blue CLEAR for each correct press</p><h3 id="ALU-Function"><a href="#ALU-Function" class="headerlink" title="ALU Function"></a>ALU Function</h3><table><thead><tr><th>Operation</th><th>ALUFN</th><th>Decimal</th></tr></thead><tbody><tr><td>ADD</td><td>0000</td><td>0</td></tr><tr><td>SUB</td><td>0001</td><td>1</td></tr><tr><td>MUL (extra)</td><td>0010</td><td>2</td></tr><tr><td>CMPEQ</td><td>0011</td><td>3</td></tr><tr><td>CMPLT</td><td>0100</td><td>4</td></tr><tr><td>CMPLE</td><td>0101</td><td>5</td></tr><tr><td>AND</td><td>0110</td><td>6</td></tr><tr><td>OR</td><td>0111</td><td>7</td></tr><tr><td>XOR</td><td>1000</td><td>8</td></tr><tr><td>A</td><td>1001</td><td>9</td></tr><tr><td>SHL</td><td>1010</td><td>10</td></tr><tr><td>SHR</td><td>1011</td><td>11</td></tr><tr><td>SRA</td><td>1100</td><td>12</td></tr><tr><td>SHD(extra)</td><td>1101</td><td>13</td></tr><tr><td>B(extra)</td><td>1110</td><td>14</td></tr><tr><td>ENQ(extra)</td><td>1111</td><td>15</td></tr></tbody></table><h3 id="Finite-State-Machine"><a href="#Finite-State-Machine" class="headerlink" title="Finite State Machine"></a>Finite State Machine</h3><p><img src="https://s2.loli.net/2022/05/18/9SUiIrtzADcaMw3.png" alt="image-20220518162522273"></p><h3 id="Datapath"><a href="#Datapath" class="headerlink" title="Datapath"></a>Datapath</h3><p><img src="https://s2.loli.net/2022/05/18/WgMfF9HcGOLhiDV.png" alt="image-20220518162707353"></p><h3 id="Game-Video"><a href="#Game-Video" class="headerlink" title="Game Video"></a>Game Video</h3><p><a href="https://drive.google.com/drive/folders/1I1gZKp6AiTt99a2aXB55q5OHeVtaDIEL">https://drive.google.com/drive/folders/1I1gZKp6AiTt99a2aXB55q5OHeVtaDIEL</a></p>]]></content>
      
      
      <categories>
          
          <category> FPGA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FPGA </tag>
            
            <tag> Finite State Machine </tag>
            
            <tag> Datapath </tag>
            
            <tag> Arithmetic Logic Unit (ALU) </tag>
            
            <tag> IO control </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android App</title>
      <link href="/liangjunyi.github.io/2022/05/18/android-app-project/"/>
      <url>/liangjunyi.github.io/2022/05/18/android-app-project/</url>
      
        <content type="html"><![CDATA[<h1 id="Touchless-Chef"><a href="#Touchless-Chef" class="headerlink" title="Touchless Chef"></a>Touchless Chef</h1><blockquote><p><a href="https://istd.sutd.edu.sg/undergraduate/courses/50001-information-systems-programming">50.001</a> 1D Project</p><p>A POC Recipe Android Application using Google Mediapipe Hands Tracking model for smart touchless scrolling.</p><p>Deliverables:</p><ul><li>Download and install our <code>.apk</code> <a href="https://drive.google.com/file/d/13otJ7cr-M_WNgoN18USStgj5GLp90yvS/view?usp=sharing"><em><strong>HERE</strong></em></a> to try it out</li><li><a href="https://drive.google.com/file/d/1CY5GiMf-hH6lPLB7P39XUdJx_tyvs2Lg/view">Slides</a></li><li><a href="https://drive.google.com/file/d/1Y4r8ZRK22YiWPUSEJxjkPF3D8pMjsIxF/view?usp=sharing">Poster</a></li><li><a href="https://drive.google.com/file/d/1eMMJQq2ctQO_Nt-fLtD9gfOnbFEruVBF/view?usp=sharing">Video</a></li></ul></blockquote><h2 id="A-Acknowledgement"><a href="#A-Acknowledgement" class="headerlink" title="A. Acknowledgement:"></a>A. Acknowledgement:</h2><ul><li><p>Tran Nguyen Bao Long</p><p>@TNBL</p><p>: Project Lead</p><ul><li>define software architecture</li><li>documentation</li></ul></li><li><p>Li Xueqing</p><p>@cnmnrll</p><p>: Project Design</p><ul><li>set basic <code>Recipe</code>, <code>Ingredients</code> and <code>Instructions</code> models <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/model"><code>model</code></a></li><li>documentation</li></ul></li><li><p>Melodie Chew En Qi</p><p>@melmelchew</p><p>: Marketing + Frontend</p><ul><li><code>RecyclerView</code> and <code>NavigationView</code></li><li><a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/adapter/recipe"><code>adapter</code></a> for <code>RecyclerView</code></li></ul></li><li><p>Melvin Lim Boon Han</p><p>@melvinlimbh</p><p>: Marketing + Frontend</p><ul><li>Fragments for different cuisines <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/home"><code>home</code></a></li><li>Fragments for creating recipes <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/recipe">RecipeCreate</a></li><li>all resources and layouts <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/res"><code>res</code></a></li></ul></li><li><p>Han Jin</p><p>@dlmszhhh</p><p>: Backend Acitivity</p><ul><li>basic recipe activities <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/activity"><code>acitivity</code></a></li></ul></li><li><p>Wang Zhouran</p><p>@wzrwzr23</p><p>: Backend Database</p><ul><li>setup <code>SQLite</code> database and corresponding Data Access Objects <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/dao"><code>dao</code></a> and <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/adapter/DatabaseAdapter.java"><code>adapter</code></a></li></ul></li><li><p>Liang Junyi</p><p>@LiangJunyi-010</p><p>Backend HandTracking</p><ul><li>implement HandTracking using Google Mediapipe <a href="https://google.github.io/mediapipe/solutions/hands.html"><strong>Hands model</strong></a> for touchless scrolling in <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/activity/recipe/ViewRecipeActivity.java"><code>ViewRecipeActivity</code></a></li></ul></li></ul><h2 id="B-Description"><a href="#B-Description" class="headerlink" title="B. Description"></a>B. Description</h2><blockquote><p>Overview of Design Pattern used:</p><ul><li><strong>Adapter Design Pattern</strong> (for SQLite database and RecyclerView)</li><li><strong>Singleton Design Pattern</strong> (for SQLite database)</li><li><strong>Observer Design Pattern</strong> (for <code>CreateRecipeActivity</code>)</li><li><strong>Factory Design Pattern</strong> (for Cuisine Fragment)</li><li><strong>Template Method Design Pattern</strong> (for Create Recipe Fragment)</li></ul></blockquote><h3 id="0-Model"><a href="#0-Model" class="headerlink" title="0. Model"></a>0. <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/model">Model</a></h3><ul><li>Utilize<code>Parcelable</code>interface:<ul><li>speed up data transfer using Java Serializable</li><li>easily pass data as <code>Bundle</code> object through Activity</li></ul></li><li>Recipe :<ul><li><code>id</code>: primary key for SQLite</li><li><code>name</code>: name of recipe</li><li><code>description</code>: short description of recipe</li><li><code>category</code>: category&#x2F;cuisine (Vietnamese&#x2F;Chinese)</li><li><code>mealType</code>: type of meals (Breakfast, Dinner,…)</li><li><code>time</code>: estimated to prepare the dish</li><li><code>imagePath</code>: local URI path to Recipe image</li><li><code>ingredients</code>: list of ingredients</li><li><code>instructions</code>: list of instructions</li></ul></li><li>Instruction :<ul><li><code>id</code>: primary key for SQLite</li><li><code>recipeID</code>: foreign key</li><li><code>content</code>: instruction body</li></ul></li><li>Ingredient :<ul><li><code>id</code>: primary key for SQLite</li><li><code>recipeID</code>: foreign key</li><li><code>name</code>: ingredient name <a href="https://camo.githubusercontent.com/797e593a78147ad691b2d046e1b76426c063283092763db6a8c7566d7b6ffb21/68747470733a2f2f692e696d6775722e636f6d2f594f4c374f756a2e706e67"><img src="https://camo.githubusercontent.com/797e593a78147ad691b2d046e1b76426c063283092763db6a8c7566d7b6ffb21/68747470733a2f2f692e696d6775722e636f6d2f594f4c374f756a2e706e67" alt="img"></a></li></ul></li></ul><h3 id="1-Database"><a href="#1-Database" class="headerlink" title="1. Database"></a>1. Database</h3><ul><li>We use local database SQLite and utilize abstract class <a href="https://developer.android.com/reference/android/database/sqlite/SQLiteOpenHelper"><code>SQLiteOpenHelper</code></a> to create and manage our database in <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/dao/SQLiteDbCRUD.java"><code>SQLiteDbCRUD</code></a></li></ul><p><a href="https://camo.githubusercontent.com/ec41a0a744d6385ec99e31a07a1a7cc3827b08f0b9e949432a1bbf382ef8a91f/68747470733a2f2f692e696d6775722e636f6d2f556f32645169462e706e67"><img src="https://camo.githubusercontent.com/ec41a0a744d6385ec99e31a07a1a7cc3827b08f0b9e949432a1bbf382ef8a91f/68747470733a2f2f692e696d6775722e636f6d2f556f32645169462e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/f27bd91ecfc2407df21da9b5390865f920f4e98539ab1a61372f8d34d731decc/68747470733a2f2f692e696d6775722e636f6d2f757667593236592e706e67"><img src="https://camo.githubusercontent.com/f27bd91ecfc2407df21da9b5390865f920f4e98539ab1a61372f8d34d731decc/68747470733a2f2f692e696d6775722e636f6d2f757667593236592e706e67" alt="drawing"></a></p><ul><li>Adapter in<code>DatabaseAdapter</code><ul><li>using <strong>Adapter Design Pattern</strong> as main API for Recipe CRUD operations</li><li>using <strong>Singleton Design Pattern</strong> to create a single instance of our database to be shared within all activities</li></ul></li><li>Data Access Objects (DAO):<ul><li>provide an API for our app to set&#x2F;get data from SQLite database</li><li>map SQLite <code>Config</code> with corresponding model attributes</li><li><code>Config</code> is a nested class improving encapsulation since it is only used within <code>dao</code> package for CRUD operations <a href="https://camo.githubusercontent.com/ab0bbbe982ee75e8c1a4846edd3da3d0cc71cba3a496bd7478ff29912983e93d/68747470733a2f2f692e696d6775722e636f6d2f4d4c77735766532e706e67"><img src="https://camo.githubusercontent.com/ab0bbbe982ee75e8c1a4846edd3da3d0cc71cba3a496bd7478ff29912983e93d/68747470733a2f2f692e696d6775722e636f6d2f4d4c77735766532e706e67" alt="img"></a></li></ul></li></ul><h3 id="2-Activity"><a href="#2-Activity" class="headerlink" title="2. Activity"></a>2. Activity</h3><ul><li>Both <code>MainActivity</code> and <code>ViewRecipeActivity</code> inherits a <code>Toolbar</code> (explain in section B5a) from abstract class <a href="https://github.com/TNBL265/TouchlessChef/blob/main/hands/src/main/java/app/touchlessChef/activity/MenuActivity.java"><code>MenuActivity</code></a></li><li><code>MainActivity</code><ul><li>implements interface <code>BaseFragment.FragmentListener</code> that define blueprint for methods to:<ul><li>display recipe: <code>onShowRecipe</code> which navigates to <code>ViewRecipeActivity</code> (an <strong>Explicit Intent</strong>)</li><li>delete recipe: <code>onDeleteRecipe</code></li></ul></li><li>consists of 3 main views:<ul><li><code>ImageView</code> show background image for selected Cuisines</li><li><code>DrawerLayout</code> for <code>NavigationView</code> (explain in section B5b)</li><li><code>NestedScrollView</code> for displaying of recipes for different Cuisine Fragments (explain in section B4a) <a href="https://camo.githubusercontent.com/3abad28c86c495ef66c203e3b8e0b85d790231e75214bf6babedea7ff11329cd/68747470733a2f2f692e696d6775722e636f6d2f676e74644736622e706e67"><img src="https://camo.githubusercontent.com/3abad28c86c495ef66c203e3b8e0b85d790231e75214bf6babedea7ff11329cd/68747470733a2f2f692e696d6775722e636f6d2f676e74644736622e706e67" alt="img"></a></li></ul></li></ul></li><li><code>ViewRecipeActivity</code>:<ul><li>display chosen recipe from the data passed as parcel from <code>MainActivity</code></li><li>where <strong>HandsTracking</strong> feature (explain in section B3) is located</li></ul></li><li><code>CreateRecipeActivity</code><ul><li>implements 3 Recipe Create Fragment listener, each corresponding to 1 step in creating the recipe (explain in section B4b)</li><li>using <strong>Observer Design Pattern</strong>, changing Fragment when reaching subsequent step in creating Recipe <a href="https://camo.githubusercontent.com/ba495d01eb3fd14c04ab9a7e634b42ce99ada5309ade64d16e240094772d2f58/68747470733a2f2f692e696d6775722e636f6d2f4a51514d4672662e706e67"><img src="https://camo.githubusercontent.com/ba495d01eb3fd14c04ab9a7e634b42ce99ada5309ade64d16e240094772d2f58/68747470733a2f2f692e696d6775722e636f6d2f4a51514d4672662e706e67" alt="img"></a></li></ul></li></ul><h3 id="3-Hand-Tracking"><a href="#3-Hand-Tracking" class="headerlink" title="3. Hand Tracking"></a>3. Hand Tracking</h3><ul><li>This feature is implemented in <code>ViewRecipeActivity</code><ul><li>2 main Buttons <code>Start Tracking</code> and <code>Stop Tracking</code> to enable&#x2F;disable the feature, which open up a <code>glSurfaceView</code> in the <code>RelativeLayout at the bottom of the page</code></li><li><code>glSurfaceView</code> is an instance of <code>SolutionGlSurfaceView&lt;HandsResult&gt;</code> provided by Mediapipe Library, similar to <a href="https://en.wikipedia.org/wiki/Java_OpenGL">OpenGL</a> that allows writing words and drawing on webcam output.</li><li>we detect whether the index finger is pointing up or down and from there, post a <code>Runnable</code> to our <code>ScrollView</code> (that is displaying the Ingredients and Instructions) to perform a smooth scroll correspoding to the gesture. <a href="https://camo.githubusercontent.com/495aca4b8f5d6950563130c404646125d54242b2e3bab8d9e08951f5a16c1040/68747470733a2f2f692e696d6775722e636f6d2f514871456c696b2e706e67"><img src="https://camo.githubusercontent.com/495aca4b8f5d6950563130c404646125d54242b2e3bab8d9e08951f5a16c1040/68747470733a2f2f692e696d6775722e636f6d2f514871456c696b2e706e67" alt="drawing"></a></li></ul></li></ul><h3 id="4-Fragment"><a href="#4-Fragment" class="headerlink" title="4. Fragment"></a>4. Fragment</h3><h4 id="a-Cuisine-Fragment-under-fragment-home"><a href="#a-Cuisine-Fragment-under-fragment-home" class="headerlink" title="a. Cuisine Fragment under fragment/home"></a>a. Cuisine Fragment under <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/home"><code>fragment/home</code></a></h4><p><a href="https://camo.githubusercontent.com/f8363e12a5a22f5626044f9fbc61243e3f8a2cade25498748f7e3149e943fedb/68747470733a2f2f692e696d6775722e636f6d2f6766364759397a2e706e67"><img src="https://camo.githubusercontent.com/f8363e12a5a22f5626044f9fbc61243e3f8a2cade25498748f7e3149e943fedb/68747470733a2f2f692e696d6775722e636f6d2f6766364759397a2e706e67" alt="img"></a></p><ul><li>Both <code>ChineseFragment</code> and <code>VietnameseFragment</code> extends from abstract class <code>BaseFragment</code><ul><li>using <strong>Factory Design Pattern</strong> (<code>BaseFragment</code> is the factory, <code>ChineseFragment</code> and <code>VietnameseFragment</code> are the products) allow us to easily scale to multiple cuisines in the future</li><li>the only abstract method is <code>getFragmentLayout</code> that each product should define to generate its own correct fragment</li><li>both using <code>RecyclerView</code> to display its recipes (explain in section B5c)</li></ul></li></ul><h4 id="b-Recipe-Create-Fragment-under-fragment-recipe"><a href="#b-Recipe-Create-Fragment-under-fragment-recipe" class="headerlink" title="b. Recipe Create Fragment under fragment/recipe"></a>b. Recipe Create Fragment under <a href="https://github.com/TNBL265/TouchlessChef/tree/main/hands/src/main/java/app/touchlessChef/fragment/recipe"><code>fragment/recipe</code></a></h4><p><a href="https://camo.githubusercontent.com/c160347f4977d083446d9522068f8d09376b75a9c1e0225e13902aaf15a1d72d/68747470733a2f2f692e696d6775722e636f6d2f66303735666d6b2e706e67"><img src="https://camo.githubusercontent.com/c160347f4977d083446d9522068f8d09376b75a9c1e0225e13902aaf15a1d72d/68747470733a2f2f692e696d6775722e636f6d2f66303735666d6b2e706e67" alt="img"></a></p><ul><li>3 fragments correspond to 3 steps in creating a new Recipe:<ul><li><code>RecipeCreateImageFragment</code>: (1st step) to add image, description, choose meal type and time</li><li><code>RecipeCreateIngredientFragment</code>: (2nd step) to add ingredients</li><li><code>RecipeCreateInstructionFragment</code>: (3rd step) to add instructions</li></ul></li></ul><p><a href="https://camo.githubusercontent.com/e3feefa7060906cf963bb8a05d143af7ebb119e99f0af0a4ffae68e54e253f07/68747470733a2f2f692e696d6775722e636f6d2f304b724c5370642e706e67"><img src="https://camo.githubusercontent.com/e3feefa7060906cf963bb8a05d143af7ebb119e99f0af0a4ffae68e54e253f07/68747470733a2f2f692e696d6775722e636f6d2f304b724c5370642e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/d12d6d998b831b091f57ae4eab7f55f429cdce7aae50960c4dc4aa5a1ad7e064/68747470733a2f2f692e696d6775722e636f6d2f6c4d4a6b7275732e706e67"><img src="https://camo.githubusercontent.com/d12d6d998b831b091f57ae4eab7f55f429cdce7aae50960c4dc4aa5a1ad7e064/68747470733a2f2f692e696d6775722e636f6d2f6c4d4a6b7275732e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/7dcb09ad3fc3825cccbca6b8c65c3e7fe3b0c057a100eb6be54ff1938d3a4a11/68747470733a2f2f692e696d6775722e636f6d2f437a736e43704d2e706e67"><img src="https://camo.githubusercontent.com/7dcb09ad3fc3825cccbca6b8c65c3e7fe3b0c057a100eb6be54ff1938d3a4a11/68747470733a2f2f692e696d6775722e636f6d2f437a736e43704d2e706e67" alt="drawing"></a></p><ul><li>All 3 Create Recipe Fragments extends the abstract class <code>NavigableFragment</code> :<ul><li>blueprint for method <code>onNext</code> that define which fragment to navigate to after completing each creating new recipe step</li><li>using <strong>Template Method Design Pattern</strong> with <code>NavigableFragment</code> as the template</li></ul></li><li><code>RecipeCreateImageFragment</code> can access the local storage to upload new image for recipe (an <strong>Implicit Intent</strong>)</li></ul><h3 id="5-View-and-Layout"><a href="#5-View-and-Layout" class="headerlink" title="5. View and Layout"></a>5. View and Layout</h3><h4 id="a-Toolbar"><a href="#a-Toolbar" class="headerlink" title="a. Toolbar"></a>a. Toolbar</h4><ul><li>Both <code>MainActivity</code> and <code>ViewRecipeActivity</code> needs to define its own Toolbar according to the blueprint defined in the abstract class <code>MenuActivity</code></li><li><code>MainActivity</code> Toolbar:<ul><li>includes <code>NavigationView</code> (explain in section B5b below)</li><li>includes menu to add a “New recipe”</li></ul></li><li><code>ViewRecipeActivity</code>Toolbar:<ul><li>support <strong>Edit</strong> and <strong>Delete</strong> recipe functionalities</li></ul></li></ul><p><a href="https://camo.githubusercontent.com/4909fb08e3c5f8b9d5ca4c34fb4be64f94ffe25480df2ba895db9b6984f6117b/68747470733a2f2f692e696d6775722e636f6d2f3738664e304a4b2e706e67"><img src="https://camo.githubusercontent.com/4909fb08e3c5f8b9d5ca4c34fb4be64f94ffe25480df2ba895db9b6984f6117b/68747470733a2f2f692e696d6775722e636f6d2f3738664e304a4b2e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/bfc21f32b917be2d07c33f063a8a2f60a6b9353ce0201cd849bb0647f07aa343/68747470733a2f2f692e696d6775722e636f6d2f584358474e51532e706e67"><img src="https://camo.githubusercontent.com/bfc21f32b917be2d07c33f063a8a2f60a6b9353ce0201cd849bb0647f07aa343/68747470733a2f2f692e696d6775722e636f6d2f584358474e51532e706e67" alt="drawing"></a></p><h4 id="b-Navigation-View-and-DrawerLayout"><a href="#b-Navigation-View-and-DrawerLayout" class="headerlink" title="b. Navigation View and DrawerLayout"></a>b. Navigation View and DrawerLayout</h4><ul><li>make use of a <code>switch</code> case to switch to a different cuisine inside <code>MainActivity</code></li><li>once a new cuisine is selected, the corresponding Fragment (<code>ChineseFragment</code> or <code>VietnameseFragment</code>) will be added into <code>NestedScrollView</code> to show recipe <code>CardView</code></li></ul><p><a href="https://camo.githubusercontent.com/5999c15ea935afb0f770e613c479ec2efc7851c36c9310828c52d7c2ed1f4662/68747470733a2f2f692e696d6775722e636f6d2f483975595858572e706e67"><img src="https://camo.githubusercontent.com/5999c15ea935afb0f770e613c479ec2efc7851c36c9310828c52d7c2ed1f4662/68747470733a2f2f692e696d6775722e636f6d2f483975595858572e706e67" alt="drawing"></a> <a href="https://camo.githubusercontent.com/5c900aad16fe7c056c2d56c739c40655c21a3f26fabeb640f7660474366d78f4/68747470733a2f2f692e696d6775722e636f6d2f3378546a5734342e706e67"><img src="https://camo.githubusercontent.com/5c900aad16fe7c056c2d56c739c40655c21a3f26fabeb640f7660474366d78f4/68747470733a2f2f692e696d6775722e636f6d2f3378546a5734342e706e67" alt="drawing"></a></p><h4 id="c-RecyclerView"><a href="#c-RecyclerView" class="headerlink" title="c. RecyclerView"></a>c. RecyclerView</h4><ul><li>We user <code>RecyclerView</code> at 2 places:<ul><li>to display recipes in the Cuisine Fragment (<code>BaseFragment</code>)</li><li>to display the added ingredients and instructions when creating new recipe in Recipe Create Fragment</li></ul></li><li>To implement <code>RecyclerView</code> we need to implement the corresponding adapter as shown in <code>adapter/recipe</code> (Adapter Design Pattern)<ul><li>the 3 main functions in each adapter to override are:<ul><li><code>onCreateViewHolder</code> that inflate a new view in the parent layout to allow for display of listed items</li><li><code>onBindViewHolder</code> that binds the data to be displayed in as listed items</li><li><code>getItemCount</code> that return the size of all the items to be displayed</li></ul></li><li>in the corresponding Fragment, before we set the above adapter, we also need to set a <code>LinearLayoutManager</code> for the <code>RecyclerView</code> to reside in</li><li>code examples:</li></ul></li></ul><pre class="line-numbers language-none"><code class="language-none">private RecyclerView instructionRecyclerView;instructionRecyclerView.setHasFixedSize(true);instructionRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));instructionRecyclerView.setAdapter(instructionAdapter);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="C-Appendix"><a href="#C-Appendix" class="headerlink" title="C. Appendix"></a>C. Appendix</h2><h3 id="0-Reference"><a href="#0-Reference" class="headerlink" title="0. Reference:"></a>0. Reference:</h3><ul><li>We made use of a some very useful Youtube tutorials + Github repos to build a normal Cooking Recipe app before adding modifications and our hand tracking feature:<ul><li><a href="https://www.youtube.com/watch?v=6-891CSz6v0">Coding with Evan</a></li><li><a href="https://www.youtube.com/watch?v=Pe5dlibIMG8&list=PLPIUB9tHYMdvnKejGY-ggulrkgj6cBb4S">Muhammad Shahid Niazi</a></li><li><a href="https://github.com/aza0092/Cooking-Recipe-Android-App">aza0092&#x2F;Cooking-Recipe-Android-App</a></li></ul></li></ul><h3 id="1-User-Story-Development"><a href="#1-User-Story-Development" class="headerlink" title="1. User Story Development"></a>1. User Story Development</h3><ul><li>BDD: Behaviour-Driven Design <a href="https://camo.githubusercontent.com/ace900256618d376a289d94c52b4ee129856488dc95b1532b5445bdd9a5fe8e9/68747470733a2f2f692e696d6775722e636f6d2f4c585a315a4c622e706e67"><img src="https://camo.githubusercontent.com/ace900256618d376a289d94c52b4ee129856488dc95b1532b5445bdd9a5fe8e9/68747470733a2f2f692e696d6775722e636f6d2f4c585a315a4c622e706e67" alt="img"></a> <a href="https://camo.githubusercontent.com/8e77afe7761d1c752b456b8dd6b02a9287eeeb2556bf67eebfd75cb8eab532b4/68747470733a2f2f692e696d6775722e636f6d2f4c61555135785a2e706e67"><img src="https://camo.githubusercontent.com/8e77afe7761d1c752b456b8dd6b02a9287eeeb2556bf67eebfd75cb8eab532b4/68747470733a2f2f692e696d6775722e636f6d2f4c61555135785a2e706e67" alt="img"></a></li><li>SMART User Stories: <strong>Specific, Measurable, Achievable, Relevant, and Time- boxed</strong> <a href="https://camo.githubusercontent.com/e088ec71ba5eeaf04f2ea9aa4eb5d1c7b17eb3474b5babff5543d718e0336b3b/68747470733a2f2f692e696d6775722e636f6d2f4644374d7373662e6a7067"><img src="https://camo.githubusercontent.com/e088ec71ba5eeaf04f2ea9aa4eb5d1c7b17eb3474b5babff5543d718e0336b3b/68747470733a2f2f692e696d6775722e636f6d2f4644374d7373662e6a7067" alt="img"></a> <a href="https://camo.githubusercontent.com/75a1f3cc1e754104f589d7546daf2581f7189189971428a45e12c60d68d09980/68747470733a2f2f692e696d6775722e636f6d2f396679714946662e6a7067"><img src="https://camo.githubusercontent.com/75a1f3cc1e754104f589d7546daf2581f7189189971428a45e12c60d68d09980/68747470733a2f2f692e696d6775722e636f6d2f396679714946662e6a7067" alt="img"></a> <a href="https://camo.githubusercontent.com/cd8254e3430cf6a97691ea6f8c46fbd5b8b0d74298715181072135a7b52ee840/68747470733a2f2f692e696d6775722e636f6d2f6d6f64657671642e706e67"><img src="https://camo.githubusercontent.com/cd8254e3430cf6a97691ea6f8c46fbd5b8b0d74298715181072135a7b52ee840/68747470733a2f2f692e696d6775722e636f6d2f6d6f64657671642e706e67" alt="img"></a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android app development </tag>
            
            <tag> Design patterns </tag>
            
            <tag> Data Base </tag>
            
            <tag> Hand Detection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux folder</title>
      <link href="/liangjunyi.github.io/2022/05/18/linux-folder/"/>
      <url>/liangjunyi.github.io/2022/05/18/linux-folder/</url>
      
        <content type="html"><![CDATA[<h2 id="x2F-—-The-Root-Directory"><a href="#x2F-—-The-Root-Directory" class="headerlink" title="&#x2F; — The Root Directory"></a>&#x2F; — The Root Directory</h2><p>Everything on your Linux system is located under the &#x2F; directory, known as the root directory. You can think of the &#x2F; directory as being similar to the C:\ directory on Windows — but this isn’t strictly true, as Linux doesn’t have drive letters. While another partition would be located at D:\ on Windows, this other partition would appear in another folder under &#x2F; on Linux.</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image352.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-bin-—-Essential-User-Binaries"><a href="#x2F-bin-—-Essential-User-Binaries" class="headerlink" title="&#x2F;bin — Essential User Binaries"></a>&#x2F;bin — Essential User Binaries</h2><p>The &#x2F;bin directory contains the essential user binaries (programs) that must be present when the system is mounted in single-user mode. Applications such as Firefox are stored in &#x2F;usr&#x2F;bin, while important system programs and utilities such as the bash shell are located in &#x2F;bin. The &#x2F;usr directory may be stored on another partition — placing these files in the &#x2F;bin directory ensures the system will have these important utilities even if no other file systems are mounted. The &#x2F;sbin directory is similar — it contains essential system administration binaries.</p><p>是Binary的缩写，这个目录存放着最经常使用的命令</p><ul><li>比如 <code>cal</code></li><li>比如 <code>cd</code></li></ul><p>在它下面还有 <code>/user/bin</code> 和 <code>/user/local/bin</code></p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image353.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-boot-—-Static-Boot-Files"><a href="#x2F-boot-—-Static-Boot-Files" class="headerlink" title="&#x2F;boot — Static Boot Files"></a>&#x2F;boot — Static Boot Files</h2><p>The &#x2F;boot directory contains the files needed to boot the system — for example, the GRUB boot loader’s files and your Linux kernels are stored here. The boot loader’s configuration files aren’t located here, though — they’re in &#x2F;etc with the other configuration files.</p><p>存放的是启动Linux的时候使用的一些核心文件，包括一些连接文件以及镜像文件</p><h2 id="x2F-cdrom-—-Historical-Mount-Point-for-CD-ROMs"><a href="#x2F-cdrom-—-Historical-Mount-Point-for-CD-ROMs" class="headerlink" title="&#x2F;cdrom — Historical Mount Point for CD-ROMs"></a>&#x2F;cdrom — Historical Mount Point for CD-ROMs</h2><p>The &#x2F;cdrom directory isn’t part of the FHS standard, but you’ll still find it on Ubuntu and other operating systems. It’s a temporary location for CD-ROMs inserted in the system. However, the standard location for temporary media is inside the &#x2F;media directory.</p><h2 id="x2F-dev-—-Device-Files"><a href="#x2F-dev-—-Device-Files" class="headerlink" title="&#x2F;dev — Device Files"></a>&#x2F;dev — Device Files</h2><p>Linux exposes devices as files, and the &#x2F;dev directory contains a number of special files that represent devices. These are not actual files as we know them, but they appear as files — for example, &#x2F;dev&#x2F;sda represents the first SATA drive in the system. If you wanted to partition it, you could start a partition editor and tell it to edit &#x2F;dev&#x2F;sda.</p><p>This directory also contains pseudo-devices, which are virtual devices that don’t actually correspond to hardware. For example, &#x2F;dev&#x2F;random produces random numbers. &#x2F;dev&#x2F;null is a special device that produces no output and automatically discards all input — when you pipe the output of a command to &#x2F;dev&#x2F;null, you discard it.</p><p>类似于windows设备管理器，把所有的硬件以文件的形式存储</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image354.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-etc-—-Configuration-Files"><a href="#x2F-etc-—-Configuration-Files" class="headerlink" title="&#x2F;etc — Configuration Files"></a>&#x2F;etc — Configuration Files</h2><p>The &#x2F;etc directory contains configuration files, which can generally be edited by hand in a text editor. Note that the &#x2F;etc&#x2F; directory contains system-wide configuration files — user-specific configuration files are located in each user’s home directory.</p><p>所有的系统管理所需要的配置文件和子目录，比如安装mysql数据库，安装完成后，这个mysql的配置文件 <code>mysql.conf</code> 会放入这个目录下</p><h2 id="x2F-home-—-Home-Folders"><a href="#x2F-home-—-Home-Folders" class="headerlink" title="&#x2F;home — Home Folders"></a>&#x2F;home — Home Folders</h2><p>The &#x2F;home directory contains a home folder for each user. For example, if your user name is bob, you have a home folder located at &#x2F;home&#x2F;bob. This home folder contains the user’s data files and user-specific configuration files. Each user only has write access to their own home folder and must obtain elevated permissions (become the root user) to modify other files on the system.</p><p>存放普通用户的主目录，在Linux中每个用户都有一个自己的目录，一般该目录名是以用户的账号命名</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image355.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-lib-—-Essential-Shared-Libraries"><a href="#x2F-lib-—-Essential-Shared-Libraries" class="headerlink" title="&#x2F;lib — Essential Shared Libraries"></a>&#x2F;lib — Essential Shared Libraries</h2><p>The &#x2F;lib directory contains libraries needed by the essential binaries in the &#x2F;bin and &#x2F;sbin folder. Libraries needed by the binaries in the &#x2F;usr&#x2F;bin folder are located in &#x2F;usr&#x2F;lib.</p><p>系统开机所需要的最基本的动态链接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</p><h2 id="x2F-lost-found-—-Recovered-Files"><a href="#x2F-lost-found-—-Recovered-Files" class="headerlink" title="&#x2F;lost+found — Recovered Files"></a>&#x2F;lost+found — Recovered Files</h2><p>Each Linux file system has a lost+found directory. If the file system crashes, a file system check will be performed at next boot. Any corrupted files found will be placed in the lost+found directory, so you can attempt to recover as much data as possible.</p><p>这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件</p><p>这个目录直接看找不到，在cmd中根目录下能看到指令为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> / <span class="token comment"># 到根目录下</span><span class="token function">ls</span> <span class="token comment"># 展示当前目录的东西</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="x2F-media-—-Removable-Media"><a href="#x2F-media-—-Removable-Media" class="headerlink" title="&#x2F;media — Removable Media"></a>&#x2F;media — Removable Media</h2><p>The &#x2F;media directory contains subdirectories where removable media devices inserted into the computer are mounted. For example, when you insert a CD into your Linux system, a directory will automatically be created inside the &#x2F;media directory. You can access the contents of the CD inside this directory.</p><p>linux系统会自动识别一些设备，例如U盘，光驱等等，当识别后，linux会把识别的设备挂载到这个目录下</p><h2 id="x2F-mnt-—-Temporary-Mount-Points"><a href="#x2F-mnt-—-Temporary-Mount-Points" class="headerlink" title="&#x2F;mnt — Temporary Mount Points"></a>&#x2F;mnt — Temporary Mount Points</h2><p>Historically speaking, the &#x2F;mnt directory is where system administrators mounted temporary file systems while using them. For example, if you’re mounting a Windows partition to perform some file recovery operations, you might mount it at &#x2F;mnt&#x2F;windows. However, you can mount other file systems anywhere on the system.</p><p>系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将外部的存储挂载到 <code>/mnt/</code> 上，然后进入该目录就可以查看里面的内容了   </p><p><code>d:/myshare</code> 就用到了这个目录，使我们虚拟机linux和windows共享了这个文件夹</p><h2 id="x2F-opt-—-Optional-Packages"><a href="#x2F-opt-—-Optional-Packages" class="headerlink" title="&#x2F;opt — Optional Packages"></a>&#x2F;opt — Optional Packages</h2><p>The &#x2F;opt directory contains subdirectories for optional software packages. It’s commonly used by proprietary software that doesn’t obey the standard file system hierarchy — for example, a proprietary program might dump its files in &#x2F;opt&#x2F;application when you install it.</p><p>这是给主机额外安装软件所存放的目录。如安装ORACLE数据库就可以放到该目录下。默认为空。</p><p>一般我们先把安装文件拷贝到opt目录下面来，便于管理，约定俗成</p><h2 id="x2F-proc-—-Kernel-amp-Process-Files"><a href="#x2F-proc-—-Kernel-amp-Process-Files" class="headerlink" title="&#x2F;proc — Kernel &amp; Process Files"></a>&#x2F;proc — Kernel &amp; Process Files</h2><p>The &#x2F;proc directory similar to the &#x2F;dev directory because it doesn’t contain standard files. It contains special files that represent system and process information.</p><p>这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息，一般不能动这个文件</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image356.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-root-—-Root-Home-Directory"><a href="#x2F-root-—-Root-Home-Directory" class="headerlink" title="&#x2F;root — Root Home Directory"></a>&#x2F;root — Root Home Directory</h2><p>The &#x2F;root directory is the home directory of the root user. Instead of being located at &#x2F;home&#x2F;root, it’s located at &#x2F;root. This is distinct from &#x2F;, which is the system root directory.</p><p>该目录为系统管理员，也称作超级权限者的用户主目录</p><h2 id="x2F-run-—-Application-State-Files"><a href="#x2F-run-—-Application-State-Files" class="headerlink" title="&#x2F;run — Application State Files"></a>&#x2F;run — Application State Files</h2><p>The &#x2F;run directory is fairly new, and gives applications a standard place to store transient files they require like sockets and process IDs. These files can’t be stored in &#x2F;tmp because files in &#x2F;tmp may be deleted.</p><h2 id="x2F-sbin-—-System-Administration-Binaries"><a href="#x2F-sbin-—-System-Administration-Binaries" class="headerlink" title="&#x2F;sbin — System Administration Binaries"></a>&#x2F;sbin — System Administration Binaries</h2><p>The &#x2F;sbin directory is similar to the &#x2F;bin directory. It contains essential binaries that are generally intended to be run by the root user for system administration.</p><p>s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image357.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-selinux-—-SELinux-Virtual-File-System"><a href="#x2F-selinux-—-SELinux-Virtual-File-System" class="headerlink" title="&#x2F;selinux — SELinux Virtual File System"></a>&#x2F;selinux — SELinux Virtual File System</h2><p>If your Linux distribution uses SELinux for security (Fedora and Red Hat, for example), the &#x2F;selinux directory contains special files used by SELinux. It’s similar to &#x2F;proc. Ubuntu doesn’t use SELinux, so the presence of this folder on Ubuntu appears to be a bug.</p><p>security-enhanced linux SELinux是一种安全子系统，他能控制程序只能访问特定文件，有三种工作模式，可以自行设置</p><h2 id="x2F-srv-—-Service-Data"><a href="#x2F-srv-—-Service-Data" class="headerlink" title="&#x2F;srv — Service Data"></a>&#x2F;srv — Service Data</h2><p>The &#x2F;srv directory contains “data for services provided by the system.” If you were using the Apache HTTP server to serve a website, you’d likely store your website’s files in a directory inside the &#x2F;srv directory.</p><p><strong>RELATED:</strong> <a href="https://www.howtogeek.com/devops/how-to-find-your-apache-configuration-folder/">*<strong>How to Find Your Apache Configuration Folder*</strong></a></p><p>service的缩写，该目录存放一些服务启动之后需要提取的数据</p><h2 id="x2F-tmp-—-Temporary-Files"><a href="#x2F-tmp-—-Temporary-Files" class="headerlink" title="&#x2F;tmp — Temporary Files"></a>&#x2F;tmp — Temporary Files</h2><p>Applications store temporary files in the &#x2F;tmp directory. These files are generally deleted whenever your system is restarted and may be deleted at any time by utilities such as tmpwatch.</p><p>存放一些临时文件</p><h2 id="x2F-usr-—-User-Binaries-amp-Read-Only-Data"><a href="#x2F-usr-—-User-Binaries-amp-Read-Only-Data" class="headerlink" title="&#x2F;usr — User Binaries &amp; Read-Only Data"></a>&#x2F;usr — User Binaries &amp; Read-Only Data</h2><p>The &#x2F;usr directory contains applications and files used by users, as opposed to applications and files used by the system. For example, non-essential applications are located inside the &#x2F;usr&#x2F;bin directory instead of the &#x2F;bin directory and non-essential system administration binaries are located in the &#x2F;usr&#x2F;sbin directory instead of the &#x2F;sbin directory. Libraries for each are located inside the &#x2F;usr&#x2F;lib directory. The &#x2F;usr directory also contains other directories — for example, architecture-independent files like graphics are located in &#x2F;usr&#x2F;share.</p><p>The &#x2F;usr&#x2F;local directory is where locally compiled applications install to by default — this prevents them from mucking up the rest of the system.</p><p>这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录</p><p><code>/usr/local</code> 是另一个给主机额外安装软件的目录。一般是通过编译源码方式安装的程序。</p><p><img src="https://www.howtogeek.com/wp-content/uploads/2012/06/image358.png?trim=1,1&bg-color=000&pad=1,1" alt="img"></p><h2 id="x2F-var-—-Variable-Data-Files"><a href="#x2F-var-—-Variable-Data-Files" class="headerlink" title="&#x2F;var — Variable Data Files"></a>&#x2F;var — Variable Data Files</h2><p>The &#x2F;var directory is the writable counterpart to the &#x2F;usr directory, which must be read-only in normal operation. Log files and everything else that would normally be written to &#x2F;usr during normal operation are written to the &#x2F;var directory. For example, you’ll find log files in &#x2F;var&#x2F;log.</p><p>这个目录中存放着在不断扩充的东西，习惯将经常被修改的目录放在这个目录下。包括各种日志文件</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> operating system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/liangjunyi.github.io/2022/05/18/hello-world/"/>
      <url>/liangjunyi.github.io/2022/05/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
